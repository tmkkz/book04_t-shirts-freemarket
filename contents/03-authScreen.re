= アプリケーション認証

//abstract{
  オンライン・フリーマーケットの認証部分を作成します。

//blankline
認証フローにある画面の作成と認証コードを作成します。


//}

//makechaptitlepage[toc=on]

== 認証フロー

下図のように画面移動します。

//image[flow][][scale=0.5 ,pos=H]

=== スプラッシュスクリーンからログイン選択

アプリを起動後初期化し、ログイン選択画面を表示します。

//blankline
サインイン方法は、

 * メール/パスワード　新規登録後に利用可能
 * Twitterアカウント
 * Googleアカウント
 * AppleID

 が選択できます。

「メール/パスワード」でのサインインは、新規登録をすることで有効になります。

//image[splash_login][][scale=0.7 ,pos=H]


=== 新規登録

　メールアドレス、パスワードなど必要な情報を入力しアカウントを作成します。作成後は、プロフィール画面が表示されます。
//blankline
 アバターの画像は、初回ランダムに選択しています。プロフィール画面で編集できます。

//image[02_regist-min][][scale=0.3 ,pos=H]


=== メール/パスワード

新規登録が完了すると次回からはメール/パスワードデサインインできます。パスワードを忘れた場合の復旧方法は、メールアドレス入力後、送られて来た認証コードを入力することで復旧します。

//image[mail_valify][desc][scale=0.8 ,pos=H]

=== SNS認証

本書では、

 * Twitter
 * Google
 * Apple

のアカウントを使用してのサインインを実装します。

//blankline
Twitter、Appleに関しては双方ともDeveloperアカウントが必要になります。
Twitterは無償でDeveloperアカウント登録できますが、Appleデベロッパーアカウントは有料となります。

どちらもDeveloperアカウントでログインし、キーの取得などが必要ですがすべて図解しています。

//image[01_login-min][][scale=0.3 ,pos=H]

=== プロフィール画面

認証完了後は、どのページに飛ばすことも可能ですが、認証フロー確認のためプロフィール画面を表示します。

//blankline
アバターの画像は、新規登録の場合、事前に保存してある画像からランダムに選択しています。SNS認証の場合は、SNSに登録してあれば優先されます。

//image[03_profile-min][][scale=0.3 ,pos=H]

それでは、実装していきましょう。
