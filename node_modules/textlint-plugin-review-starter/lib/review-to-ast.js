// LICENSE : MIT
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parse = parse;

var _assert = _interopRequireDefault(require("assert"));

var _astTraverse = require("@textlint/ast-traverse");

var _astTester = require("@textlint/ast-tester");

var _mapping = require("./mapping");

var _chunker = require("./chunker");

var _chunkParsers = require("./chunk-parsers");

var _powerAssertVisitorKeys = "{\"ArrayExpression\":[\"elements\"],\"AssignmentExpression\":[\"left\",\"right\"],\"BinaryExpression\":[\"left\",\"right\"],\"InterpreterDirective\":[],\"Directive\":[\"value\"],\"DirectiveLiteral\":[],\"BlockStatement\":[\"directives\",\"body\"],\"BreakStatement\":[\"label\"],\"CallExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"CatchClause\":[\"param\",\"body\"],\"ConditionalExpression\":[\"test\",\"consequent\",\"alternate\"],\"ContinueStatement\":[\"label\"],\"DebuggerStatement\":[],\"DoWhileStatement\":[\"test\",\"body\"],\"EmptyStatement\":[],\"ExpressionStatement\":[\"expression\"],\"File\":[\"program\"],\"ForInStatement\":[\"left\",\"right\",\"body\"],\"ForStatement\":[\"init\",\"test\",\"update\",\"body\"],\"FunctionDeclaration\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"FunctionExpression\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"Identifier\":[\"typeAnnotation\",\"decorators\"],\"IfStatement\":[\"test\",\"consequent\",\"alternate\"],\"LabeledStatement\":[\"label\",\"body\"],\"StringLiteral\":[],\"NumericLiteral\":[],\"NullLiteral\":[],\"BooleanLiteral\":[],\"RegExpLiteral\":[],\"LogicalExpression\":[\"left\",\"right\"],\"MemberExpression\":[\"object\",\"property\"],\"NewExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"Program\":[\"directives\",\"body\"],\"ObjectExpression\":[\"properties\"],\"ObjectMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectProperty\":[\"key\",\"value\",\"decorators\"],\"RestElement\":[\"argument\",\"typeAnnotation\"],\"ReturnStatement\":[\"argument\"],\"SequenceExpression\":[\"expressions\"],\"ParenthesizedExpression\":[\"expression\"],\"SwitchCase\":[\"test\",\"consequent\"],\"SwitchStatement\":[\"discriminant\",\"cases\"],\"ThisExpression\":[],\"ThrowStatement\":[\"argument\"],\"TryStatement\":[\"block\",\"handler\",\"finalizer\"],\"UnaryExpression\":[\"argument\"],\"UpdateExpression\":[\"argument\"],\"VariableDeclaration\":[\"declarations\"],\"VariableDeclarator\":[\"id\",\"init\"],\"WhileStatement\":[\"test\",\"body\"],\"WithStatement\":[\"object\",\"body\"],\"AssignmentPattern\":[\"left\",\"right\",\"decorators\"],\"ArrayPattern\":[\"elements\",\"typeAnnotation\"],\"ArrowFunctionExpression\":[\"params\",\"body\",\"returnType\",\"typeParameters\"],\"ClassBody\":[\"body\"],\"ClassExpression\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ClassDeclaration\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ExportAllDeclaration\":[\"source\"],\"ExportDefaultDeclaration\":[\"declaration\"],\"ExportNamedDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"ExportSpecifier\":[\"local\",\"exported\"],\"ForOfStatement\":[\"left\",\"right\",\"body\"],\"ImportDeclaration\":[\"specifiers\",\"source\"],\"ImportDefaultSpecifier\":[\"local\"],\"ImportNamespaceSpecifier\":[\"local\"],\"ImportSpecifier\":[\"local\",\"imported\"],\"MetaProperty\":[\"meta\",\"property\"],\"ClassMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectPattern\":[\"properties\",\"typeAnnotation\",\"decorators\"],\"SpreadElement\":[\"argument\"],\"Super\":[],\"TaggedTemplateExpression\":[\"tag\",\"quasi\",\"typeParameters\"],\"TemplateElement\":[],\"TemplateLiteral\":[\"quasis\",\"expressions\"],\"YieldExpression\":[\"argument\"],\"AwaitExpression\":[\"argument\"],\"Import\":[],\"BigIntLiteral\":[],\"ExportNamespaceSpecifier\":[\"exported\"],\"OptionalMemberExpression\":[\"object\",\"property\"],\"OptionalCallExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"ClassProperty\":[\"key\",\"value\",\"typeAnnotation\",\"decorators\"],\"ClassPrivateProperty\":[\"key\",\"value\",\"decorators\",\"typeAnnotation\"],\"ClassPrivateMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"PrivateName\":[\"id\"],\"AnyTypeAnnotation\":[],\"ArrayTypeAnnotation\":[\"elementType\"],\"BooleanTypeAnnotation\":[],\"BooleanLiteralTypeAnnotation\":[],\"NullLiteralTypeAnnotation\":[],\"ClassImplements\":[\"id\",\"typeParameters\"],\"DeclareClass\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"DeclareFunction\":[\"id\"],\"DeclareInterface\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"DeclareModule\":[\"id\",\"body\"],\"DeclareModuleExports\":[\"typeAnnotation\"],\"DeclareTypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"DeclareOpaqueType\":[\"id\",\"typeParameters\",\"supertype\"],\"DeclareVariable\":[\"id\"],\"DeclareExportDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"DeclareExportAllDeclaration\":[\"source\"],\"DeclaredPredicate\":[\"value\"],\"ExistsTypeAnnotation\":[],\"FunctionTypeAnnotation\":[\"typeParameters\",\"params\",\"rest\",\"returnType\"],\"FunctionTypeParam\":[\"name\",\"typeAnnotation\"],\"GenericTypeAnnotation\":[\"id\",\"typeParameters\"],\"InferredPredicate\":[],\"InterfaceExtends\":[\"id\",\"typeParameters\"],\"InterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"InterfaceTypeAnnotation\":[\"extends\",\"body\"],\"IntersectionTypeAnnotation\":[\"types\"],\"MixedTypeAnnotation\":[],\"EmptyTypeAnnotation\":[],\"NullableTypeAnnotation\":[\"typeAnnotation\"],\"NumberLiteralTypeAnnotation\":[],\"NumberTypeAnnotation\":[],\"ObjectTypeAnnotation\":[\"properties\",\"indexers\",\"callProperties\",\"internalSlots\"],\"ObjectTypeInternalSlot\":[\"id\",\"value\",\"optional\",\"static\",\"method\"],\"ObjectTypeCallProperty\":[\"value\"],\"ObjectTypeIndexer\":[\"id\",\"key\",\"value\",\"variance\"],\"ObjectTypeProperty\":[\"key\",\"value\",\"variance\"],\"ObjectTypeSpreadProperty\":[\"argument\"],\"OpaqueType\":[\"id\",\"typeParameters\",\"supertype\",\"impltype\"],\"QualifiedTypeIdentifier\":[\"id\",\"qualification\"],\"StringLiteralTypeAnnotation\":[],\"StringTypeAnnotation\":[],\"SymbolTypeAnnotation\":[],\"ThisTypeAnnotation\":[],\"TupleTypeAnnotation\":[\"types\"],\"TypeofTypeAnnotation\":[\"argument\"],\"TypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"TypeAnnotation\":[\"typeAnnotation\"],\"TypeCastExpression\":[\"expression\",\"typeAnnotation\"],\"TypeParameter\":[\"bound\",\"default\",\"variance\"],\"TypeParameterDeclaration\":[\"params\"],\"TypeParameterInstantiation\":[\"params\"],\"UnionTypeAnnotation\":[\"types\"],\"Variance\":[],\"VoidTypeAnnotation\":[],\"EnumDeclaration\":[\"id\",\"body\"],\"EnumBooleanBody\":[\"members\"],\"EnumNumberBody\":[\"members\"],\"EnumStringBody\":[\"members\"],\"EnumSymbolBody\":[\"members\"],\"EnumBooleanMember\":[\"id\"],\"EnumNumberMember\":[\"id\",\"init\"],\"EnumStringMember\":[\"id\",\"init\"],\"EnumDefaultedMember\":[\"id\"],\"IndexedAccessType\":[\"objectType\",\"indexType\"],\"OptionalIndexedAccessType\":[\"objectType\",\"indexType\"],\"JSXAttribute\":[\"name\",\"value\"],\"JSXClosingElement\":[\"name\"],\"JSXElement\":[\"openingElement\",\"children\",\"closingElement\"],\"JSXEmptyExpression\":[],\"JSXExpressionContainer\":[\"expression\"],\"JSXSpreadChild\":[\"expression\"],\"JSXIdentifier\":[],\"JSXMemberExpression\":[\"object\",\"property\"],\"JSXNamespacedName\":[\"namespace\",\"name\"],\"JSXOpeningElement\":[\"name\",\"attributes\"],\"JSXSpreadAttribute\":[\"argument\"],\"JSXText\":[],\"JSXFragment\":[\"openingFragment\",\"children\",\"closingFragment\"],\"JSXOpeningFragment\":[],\"JSXClosingFragment\":[],\"Noop\":[],\"Placeholder\":[],\"V8IntrinsicIdentifier\":[],\"ArgumentPlaceholder\":[],\"BindExpression\":[\"object\",\"callee\"],\"ImportAttribute\":[\"key\",\"value\"],\"Decorator\":[\"expression\"],\"DoExpression\":[\"body\"],\"ExportDefaultSpecifier\":[\"exported\"],\"RecordExpression\":[\"properties\"],\"TupleExpression\":[\"elements\"],\"DecimalLiteral\":[],\"StaticBlock\":[\"body\"],\"ModuleExpression\":[\"body\"],\"TopicReference\":[],\"PipelineTopicExpression\":[\"expression\"],\"PipelineBareFunction\":[\"callee\"],\"PipelinePrimaryTopicReference\":[],\"TSParameterProperty\":[\"parameter\"],\"TSDeclareFunction\":[\"id\",\"typeParameters\",\"params\",\"returnType\"],\"TSDeclareMethod\":[\"decorators\",\"key\",\"typeParameters\",\"params\",\"returnType\"],\"TSQualifiedName\":[\"left\",\"right\"],\"TSCallSignatureDeclaration\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSConstructSignatureDeclaration\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSPropertySignature\":[\"key\",\"typeAnnotation\",\"initializer\"],\"TSMethodSignature\":[\"key\",\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSIndexSignature\":[\"parameters\",\"typeAnnotation\"],\"TSAnyKeyword\":[],\"TSBooleanKeyword\":[],\"TSBigIntKeyword\":[],\"TSIntrinsicKeyword\":[],\"TSNeverKeyword\":[],\"TSNullKeyword\":[],\"TSNumberKeyword\":[],\"TSObjectKeyword\":[],\"TSStringKeyword\":[],\"TSSymbolKeyword\":[],\"TSUndefinedKeyword\":[],\"TSUnknownKeyword\":[],\"TSVoidKeyword\":[],\"TSThisType\":[],\"TSFunctionType\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSConstructorType\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSTypeReference\":[\"typeName\",\"typeParameters\"],\"TSTypePredicate\":[\"parameterName\",\"typeAnnotation\"],\"TSTypeQuery\":[\"exprName\"],\"TSTypeLiteral\":[\"members\"],\"TSArrayType\":[\"elementType\"],\"TSTupleType\":[\"elementTypes\"],\"TSOptionalType\":[\"typeAnnotation\"],\"TSRestType\":[\"typeAnnotation\"],\"TSNamedTupleMember\":[\"label\",\"elementType\"],\"TSUnionType\":[\"types\"],\"TSIntersectionType\":[\"types\"],\"TSConditionalType\":[\"checkType\",\"extendsType\",\"trueType\",\"falseType\"],\"TSInferType\":[\"typeParameter\"],\"TSParenthesizedType\":[\"typeAnnotation\"],\"TSTypeOperator\":[\"typeAnnotation\"],\"TSIndexedAccessType\":[\"objectType\",\"indexType\"],\"TSMappedType\":[\"typeParameter\",\"typeAnnotation\",\"nameType\"],\"TSLiteralType\":[\"literal\"],\"TSExpressionWithTypeArguments\":[\"expression\",\"typeParameters\"],\"TSInterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"TSInterfaceBody\":[\"body\"],\"TSTypeAliasDeclaration\":[\"id\",\"typeParameters\",\"typeAnnotation\"],\"TSAsExpression\":[\"expression\",\"typeAnnotation\"],\"TSTypeAssertion\":[\"typeAnnotation\",\"expression\"],\"TSEnumDeclaration\":[\"id\",\"members\"],\"TSEnumMember\":[\"id\",\"initializer\"],\"TSModuleDeclaration\":[\"id\",\"body\"],\"TSModuleBlock\":[\"body\"],\"TSImportType\":[\"argument\",\"qualifier\",\"typeParameters\"],\"TSImportEqualsDeclaration\":[\"id\",\"moduleReference\"],\"TSExternalModuleReference\":[\"expression\"],\"TSNonNullExpression\":[\"expression\"],\"TSExportAssignment\":[\"expression\"],\"TSNamespaceExportDeclaration\":[\"id\"],\"TSTypeAnnotation\":[\"typeAnnotation\"],\"TSTypeParameterInstantiation\":[\"params\"],\"TSTypeParameterDeclaration\":[\"params\"],\"TSTypeParameter\":[\"constraint\",\"default\"]}",
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * parse text and return ast mapped location info.
 * @param {string} text
 * @return {TxtNode}
 */
function parse(text) {
  var lines = text.match(/(?:.*\r?\n|.+$)/g); // split lines preserving line endings

  var chunks = (0, _chunker.parseAsChunks)(text);
  var nodes = [];
  chunks.forEach(function (chunk) {
    var parser = _chunkParsers.ChunkParsers[chunk.type];
    var node = parser(chunk);

    if (node !== null) {
      nodes.push(node);
    }
  });
  var ast = {
    type: _mapping.Syntax.Document,
    raw: text,
    range: [0, text.length],
    loc: {
      start: {
        line: 1,
        column: 0
      },
      end: {
        line: lines.length,
        column: lines[lines.length - 1].length
      }
    },
    children: nodes
  };
  validateAST(ast, text, lines);
  return ast;
}

function validateAST(ast, text, lines) {
  (0, _astTester.test)(ast);
  var prevNode = ast;
  (0, _astTraverse.traverse)(ast, {
    enter: function enter(node) {
      try {
        var _rec = new _powerAssertRecorder();

        (0, _assert["default"])(_rec._expr(_rec._capt(_rec._capt(_rec._capt(node, "arguments/0/left/object").raw, "arguments/0/left") === _rec._capt(_rec._capt(text, "arguments/0/right/callee/object").slice(_rec._capt(_rec._capt(_rec._capt(node, "arguments/0/right/arguments/0/object/object").range, "arguments/0/right/arguments/0/object")[0], "arguments/0/right/arguments/0"), _rec._capt(_rec._capt(_rec._capt(node, "arguments/0/right/arguments/1/object/object").range, "arguments/0/right/arguments/1/object")[1], "arguments/0/right/arguments/1")), "arguments/0/right"), "arguments/0"), {
          content: "assert(node.raw === text.slice(node.range[0], node.range[1]))",
          filepath: "src/review-to-ast.js",
          line: 56,
          ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[7,11]},\"property\":{\"type\":\"Identifier\",\"name\":\"raw\",\"range\":[12,15]},\"computed\":false,\"range\":[7,15]},\"right\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"text\",\"range\":[20,24]},\"property\":{\"type\":\"Identifier\",\"name\":\"slice\",\"range\":[25,30]},\"computed\":false,\"range\":[20,30]},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[31,35]},\"property\":{\"type\":\"Identifier\",\"name\":\"range\",\"range\":[36,41]},\"computed\":false,\"range\":[31,41]},\"property\":{\"type\":\"NumericLiteral\",\"value\":0,\"range\":[42,43]},\"computed\":true,\"range\":[31,44]},{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[46,50]},\"property\":{\"type\":\"Identifier\",\"name\":\"range\",\"range\":[51,56]},\"computed\":false,\"range\":[46,56]},\"property\":{\"type\":\"NumericLiteral\",\"value\":1,\"range\":[57,58]},\"computed\":true,\"range\":[46,59]}],\"range\":[20,60]},\"range\":[7,60]}],\"range\":[0,61]}",
          tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[7,11]},{\"type\":{\"label\":\".\"},\"range\":[11,12]},{\"type\":{\"label\":\"name\"},\"value\":\"raw\",\"range\":[12,15]},{\"type\":{\"label\":\"==/!=/===/!==\"},\"value\":\"===\",\"range\":[16,19]},{\"type\":{\"label\":\"name\"},\"value\":\"text\",\"range\":[20,24]},{\"type\":{\"label\":\".\"},\"range\":[24,25]},{\"type\":{\"label\":\"name\"},\"value\":\"slice\",\"range\":[25,30]},{\"type\":{\"label\":\"(\"},\"range\":[30,31]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[31,35]},{\"type\":{\"label\":\".\"},\"range\":[35,36]},{\"type\":{\"label\":\"name\"},\"value\":\"range\",\"range\":[36,41]},{\"type\":{\"label\":\"[\"},\"range\":[41,42]},{\"type\":{\"label\":\"num\"},\"value\":0,\"range\":[42,43]},{\"type\":{\"label\":\"]\"},\"range\":[43,44]},{\"type\":{\"label\":\",\"},\"range\":[44,45]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[46,50]},{\"type\":{\"label\":\".\"},\"range\":[50,51]},{\"type\":{\"label\":\"name\"},\"value\":\"range\",\"range\":[51,56]},{\"type\":{\"label\":\"[\"},\"range\":[56,57]},{\"type\":{\"label\":\"num\"},\"value\":1,\"range\":[57,58]},{\"type\":{\"label\":\"]\"},\"range\":[58,59]},{\"type\":{\"label\":\")\"},\"range\":[59,60]},{\"type\":{\"label\":\")\"},\"range\":[60,61]}]",
          visitorKeys: _powerAssertVisitorKeys
        }));

        if (node.loc.start.line === node.loc.end.line) {
          var _rec2 = new _powerAssertRecorder();

          // single line
          var line = lines[node.loc.start.line - 1];
          (0, _assert["default"])(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(node, "arguments/0/left/object").raw, "arguments/0/left") === _rec2._capt(_rec2._capt(line, "arguments/0/right/callee/object").slice(_rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(node, "arguments/0/right/arguments/0/object/object/object").loc, "arguments/0/right/arguments/0/object/object").start, "arguments/0/right/arguments/0/object").column, "arguments/0/right/arguments/0"), _rec2._capt(_rec2._capt(_rec2._capt(_rec2._capt(node, "arguments/0/right/arguments/1/object/object/object").loc, "arguments/0/right/arguments/1/object/object").end, "arguments/0/right/arguments/1/object").column, "arguments/0/right/arguments/1")), "arguments/0/right"), "arguments/0"), {
            content: "assert(node.raw === line.slice(node.loc.start.column, node.loc.end.column))",
            filepath: "src/review-to-ast.js",
            line: 61,
            ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[7,11]},\"property\":{\"type\":\"Identifier\",\"name\":\"raw\",\"range\":[12,15]},\"computed\":false,\"range\":[7,15]},\"right\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"line\",\"range\":[20,24]},\"property\":{\"type\":\"Identifier\",\"name\":\"slice\",\"range\":[25,30]},\"computed\":false,\"range\":[20,30]},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[31,35]},\"property\":{\"type\":\"Identifier\",\"name\":\"loc\",\"range\":[36,39]},\"computed\":false,\"range\":[31,39]},\"property\":{\"type\":\"Identifier\",\"name\":\"start\",\"range\":[40,45]},\"computed\":false,\"range\":[31,45]},\"property\":{\"type\":\"Identifier\",\"name\":\"column\",\"range\":[46,52]},\"computed\":false,\"range\":[31,52]},{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[54,58]},\"property\":{\"type\":\"Identifier\",\"name\":\"loc\",\"range\":[59,62]},\"computed\":false,\"range\":[54,62]},\"property\":{\"type\":\"Identifier\",\"name\":\"end\",\"range\":[63,66]},\"computed\":false,\"range\":[54,66]},\"property\":{\"type\":\"Identifier\",\"name\":\"column\",\"range\":[67,73]},\"computed\":false,\"range\":[54,73]}],\"range\":[20,74]},\"range\":[7,74]}],\"range\":[0,75]}",
            tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[7,11]},{\"type\":{\"label\":\".\"},\"range\":[11,12]},{\"type\":{\"label\":\"name\"},\"value\":\"raw\",\"range\":[12,15]},{\"type\":{\"label\":\"==/!=/===/!==\"},\"value\":\"===\",\"range\":[16,19]},{\"type\":{\"label\":\"name\"},\"value\":\"line\",\"range\":[20,24]},{\"type\":{\"label\":\".\"},\"range\":[24,25]},{\"type\":{\"label\":\"name\"},\"value\":\"slice\",\"range\":[25,30]},{\"type\":{\"label\":\"(\"},\"range\":[30,31]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[31,35]},{\"type\":{\"label\":\".\"},\"range\":[35,36]},{\"type\":{\"label\":\"name\"},\"value\":\"loc\",\"range\":[36,39]},{\"type\":{\"label\":\".\"},\"range\":[39,40]},{\"type\":{\"label\":\"name\"},\"value\":\"start\",\"range\":[40,45]},{\"type\":{\"label\":\".\"},\"range\":[45,46]},{\"type\":{\"label\":\"name\"},\"value\":\"column\",\"range\":[46,52]},{\"type\":{\"label\":\",\"},\"range\":[52,53]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[54,58]},{\"type\":{\"label\":\".\"},\"range\":[58,59]},{\"type\":{\"label\":\"name\"},\"value\":\"loc\",\"range\":[59,62]},{\"type\":{\"label\":\".\"},\"range\":[62,63]},{\"type\":{\"label\":\"name\"},\"value\":\"end\",\"range\":[63,66]},{\"type\":{\"label\":\".\"},\"range\":[66,67]},{\"type\":{\"label\":\"name\"},\"value\":\"column\",\"range\":[67,73]},{\"type\":{\"label\":\")\"},\"range\":[73,74]},{\"type\":{\"label\":\")\"},\"range\":[74,75]}]",
            visitorKeys: _powerAssertVisitorKeys
          }));
        } else {
          var _rec3 = new _powerAssertRecorder(),
              _rec4 = new _powerAssertRecorder();

          // multi line
          var firstLine = lines[node.loc.start.line - 1];
          (0, _assert["default"])(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(node, "arguments/0/callee/object/object").raw, "arguments/0/callee/object").startsWith(_rec3._capt(_rec3._capt(firstLine, "arguments/0/arguments/0/callee/object").substr(_rec3._capt(_rec3._capt(_rec3._capt(_rec3._capt(node, "arguments/0/arguments/0/arguments/0/object/object/object").loc, "arguments/0/arguments/0/arguments/0/object/object").start, "arguments/0/arguments/0/arguments/0/object").column, "arguments/0/arguments/0/arguments/0")), "arguments/0/arguments/0")), "arguments/0"), {
            content: "assert(node.raw.startsWith(firstLine.substr(node.loc.start.column)))",
            filepath: "src/review-to-ast.js",
            line: 65,
            ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[7,11]},\"property\":{\"type\":\"Identifier\",\"name\":\"raw\",\"range\":[12,15]},\"computed\":false,\"range\":[7,15]},\"property\":{\"type\":\"Identifier\",\"name\":\"startsWith\",\"range\":[16,26]},\"computed\":false,\"range\":[7,26]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"firstLine\",\"range\":[27,36]},\"property\":{\"type\":\"Identifier\",\"name\":\"substr\",\"range\":[37,43]},\"computed\":false,\"range\":[27,43]},\"arguments\":[{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[44,48]},\"property\":{\"type\":\"Identifier\",\"name\":\"loc\",\"range\":[49,52]},\"computed\":false,\"range\":[44,52]},\"property\":{\"type\":\"Identifier\",\"name\":\"start\",\"range\":[53,58]},\"computed\":false,\"range\":[44,58]},\"property\":{\"type\":\"Identifier\",\"name\":\"column\",\"range\":[59,65]},\"computed\":false,\"range\":[44,65]}],\"range\":[27,66]}],\"range\":[7,67]}],\"range\":[0,68]}",
            tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[7,11]},{\"type\":{\"label\":\".\"},\"range\":[11,12]},{\"type\":{\"label\":\"name\"},\"value\":\"raw\",\"range\":[12,15]},{\"type\":{\"label\":\".\"},\"range\":[15,16]},{\"type\":{\"label\":\"name\"},\"value\":\"startsWith\",\"range\":[16,26]},{\"type\":{\"label\":\"(\"},\"range\":[26,27]},{\"type\":{\"label\":\"name\"},\"value\":\"firstLine\",\"range\":[27,36]},{\"type\":{\"label\":\".\"},\"range\":[36,37]},{\"type\":{\"label\":\"name\"},\"value\":\"substr\",\"range\":[37,43]},{\"type\":{\"label\":\"(\"},\"range\":[43,44]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[44,48]},{\"type\":{\"label\":\".\"},\"range\":[48,49]},{\"type\":{\"label\":\"name\"},\"value\":\"loc\",\"range\":[49,52]},{\"type\":{\"label\":\".\"},\"range\":[52,53]},{\"type\":{\"label\":\"name\"},\"value\":\"start\",\"range\":[53,58]},{\"type\":{\"label\":\".\"},\"range\":[58,59]},{\"type\":{\"label\":\"name\"},\"value\":\"column\",\"range\":[59,65]},{\"type\":{\"label\":\")\"},\"range\":[65,66]},{\"type\":{\"label\":\")\"},\"range\":[66,67]},{\"type\":{\"label\":\")\"},\"range\":[67,68]}]",
            visitorKeys: _powerAssertVisitorKeys
          }));
          var lastLine = lines[node.loc.end.line - 1];
          (0, _assert["default"])(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(node, "arguments/0/callee/object/object").raw, "arguments/0/callee/object").endsWith(_rec4._capt(_rec4._capt(lastLine, "arguments/0/arguments/0/callee/object").substr(0, _rec4._capt(_rec4._capt(_rec4._capt(_rec4._capt(node, "arguments/0/arguments/0/arguments/1/object/object/object").loc, "arguments/0/arguments/0/arguments/1/object/object").end, "arguments/0/arguments/0/arguments/1/object").column, "arguments/0/arguments/0/arguments/1")), "arguments/0/arguments/0")), "arguments/0"), {
            content: "assert(node.raw.endsWith(lastLine.substr(0, node.loc.end.column)))",
            filepath: "src/review-to-ast.js",
            line: 67,
            ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[7,11]},\"property\":{\"type\":\"Identifier\",\"name\":\"raw\",\"range\":[12,15]},\"computed\":false,\"range\":[7,15]},\"property\":{\"type\":\"Identifier\",\"name\":\"endsWith\",\"range\":[16,24]},\"computed\":false,\"range\":[7,24]},\"arguments\":[{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"lastLine\",\"range\":[25,33]},\"property\":{\"type\":\"Identifier\",\"name\":\"substr\",\"range\":[34,40]},\"computed\":false,\"range\":[25,40]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":0,\"range\":[41,42]},{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"node\",\"range\":[44,48]},\"property\":{\"type\":\"Identifier\",\"name\":\"loc\",\"range\":[49,52]},\"computed\":false,\"range\":[44,52]},\"property\":{\"type\":\"Identifier\",\"name\":\"end\",\"range\":[53,56]},\"computed\":false,\"range\":[44,56]},\"property\":{\"type\":\"Identifier\",\"name\":\"column\",\"range\":[57,63]},\"computed\":false,\"range\":[44,63]}],\"range\":[25,64]}],\"range\":[7,65]}],\"range\":[0,66]}",
            tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[7,11]},{\"type\":{\"label\":\".\"},\"range\":[11,12]},{\"type\":{\"label\":\"name\"},\"value\":\"raw\",\"range\":[12,15]},{\"type\":{\"label\":\".\"},\"range\":[15,16]},{\"type\":{\"label\":\"name\"},\"value\":\"endsWith\",\"range\":[16,24]},{\"type\":{\"label\":\"(\"},\"range\":[24,25]},{\"type\":{\"label\":\"name\"},\"value\":\"lastLine\",\"range\":[25,33]},{\"type\":{\"label\":\".\"},\"range\":[33,34]},{\"type\":{\"label\":\"name\"},\"value\":\"substr\",\"range\":[34,40]},{\"type\":{\"label\":\"(\"},\"range\":[40,41]},{\"type\":{\"label\":\"num\"},\"value\":0,\"range\":[41,42]},{\"type\":{\"label\":\",\"},\"range\":[42,43]},{\"type\":{\"label\":\"name\"},\"value\":\"node\",\"range\":[44,48]},{\"type\":{\"label\":\".\"},\"range\":[48,49]},{\"type\":{\"label\":\"name\"},\"value\":\"loc\",\"range\":[49,52]},{\"type\":{\"label\":\".\"},\"range\":[52,53]},{\"type\":{\"label\":\"name\"},\"value\":\"end\",\"range\":[53,56]},{\"type\":{\"label\":\".\"},\"range\":[56,57]},{\"type\":{\"label\":\"name\"},\"value\":\"column\",\"range\":[57,63]},{\"type\":{\"label\":\")\"},\"range\":[63,64]},{\"type\":{\"label\":\")\"},\"range\":[64,65]},{\"type\":{\"label\":\")\"},\"range\":[65,66]}]",
            visitorKeys: _powerAssertVisitorKeys
          }));
        }
      } catch (ex) {
        console.log('type: %s, line: %s, column: %s', prevNode.type, prevNode.loc.start.line, prevNode.loc.start.column);
        console.log('type: %s, line: %s, column: %s', node.type, node.loc.start.line, node.loc.start.column);
        throw ex;
      }

      prevNode = node;
    }
  });
}
//# sourceMappingURL=review-to-ast.js.map